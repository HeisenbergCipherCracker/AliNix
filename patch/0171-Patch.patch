From 71b9fa975eb1db3e1249c89fc0596db6331d6d1b Mon Sep 17 00:00:00 2001
From: Heisenberg <alimirmohammad.1386@gmail.com>
Date: Tue, 2 Apr 2024 22:39:15 -0400
Subject: [PATCH 171/493] Patch

---
 kernelz/src/boot/loader.s | 90 +++++++++++++++++++--------------------
 1 file changed, 45 insertions(+), 45 deletions(-)

diff --git a/kernelz/src/boot/loader.s b/kernelz/src/boot/loader.s
index e8a345c..d2e9639 100644
--- a/kernelz/src/boot/loader.s
+++ b/kernelz/src/boot/loader.s
@@ -5,82 +5,82 @@
 .set CHECKSUM, -(MAGIC + FLAGS) ; checksum of above, to prove we are multiboot
 
 .section .multiboot
-	.align 4
-	.long MAGIC
-	.long FLAGS
-	.long CHECKSUM
+    .align 4
+    .long MAGIC
+    .long FLAGS
+    .long CHECKSUM
 
 .set KERNEL_VIRTUAL_BASE, 0xC0000000
 .set KERNEL_PAGE_NUMBER, (KERNEL_VIRTUAL_BASE >> 22)
 
 .section .bootstrap_stack, "aw", @nobits
 stack_bottom:
-.skip 16384 ; 16 KiB
+    .skip 16384 ; 16 KiB
 .global stack_top
 stack_top:
 
 .section .data
-.align 0x1000
+    .align 0x1000
 .global BootPageDirectory
 BootPageDirectory:
-	; identity map the first 4 MB
-	.long 0x00000083
-	
-	; pages before kernel
-	.rept (KERNEL_PAGE_NUMBER - 1)
-	.long 0
-	.endr
-	
-	; this page contains the kernel
-	.long 0x00000083
-
-	; pages after kernel
-	.rept (1024 - KERNEL_PAGE_NUMBER - 1)
-	.long 0
-	.endr
+    ; identity map the first 4 MB
+    .long 0x00000083
+    
+    ; pages before kernel
+    .rept (KERNEL_PAGE_NUMBER - 1)
+        .long 0
+    .endr
+    
+    ; this page contains the kernel
+    .long 0x00000083
+
+    ; pages after kernel
+    .rept (1024 - KERNEL_PAGE_NUMBER - 1)
+        .long 0
+    .endr
 
 .global _kernel_virtual_base
 _kernel_virtual_base:
-	.long KERNEL_VIRTUAL_BASE
+    .long KERNEL_VIRTUAL_BASE
 
 .section .text
-.align 4
+    .align 4
 .global _entrypoint
 .type _entrypoint, @function
 
 _entrypoint:
-	mov $(BootPageDirectory - KERNEL_VIRTUAL_BASE), %ecx
-	mov %ecx, %cr3
+    mov $(BootPageDirectory - KERNEL_VIRTUAL_BASE), %ecx
+    mov %ecx, %cr3
 
-	; enable 4 mb pages
-	mov %cr4, %ecx
-	or $0x00000010, %ecx
-	mov %ecx, %cr4
+    ; enable 4 mb pages
+    mov %cr4, %ecx
+    or $0x00000010, %ecx
+    mov %ecx, %cr4
 
-	; enable paging
-	mov %cr0, %ecx
-	or $0x80000001, %ecx
-	mov %ecx, %cr0
+    ; enable paging
+    mov %cr0, %ecx
+    or $0x80000001, %ecx
+    mov %ecx, %cr0
 
-	; jump to higher half code
-	lea 4f, %ecx
-	jmp *%ecx
+    ; jump to higher half code
+    lea 4f, %ecx
+    jmp *%ecx
 
 4:
-	; Unmap the identity-mapped pages
-	movl $0, BootPageDirectory
-	invlpg 0
+    ; Unmap the identity-mapped pages
+    movl $0, BootPageDirectory
+    invlpg 0
 
-	movl $stack_top, %esp
-	; Mark end of call stack for unwinding
-	movl $0, %ebp
+    movl $stack_top, %esp
+    ; Mark end of call stack for unwinding
+    movl $0, %ebp
 
-	add $KERNEL_VIRTUAL_BASE, %ebx
+    add $KERNEL_VIRTUAL_BASE, %ebx
 
     call callConstructors
 
-	push $_kernel_base
-	push $_kernel_end
+    push $_kernel_base
+    push $_kernel_end
     push %eax
     push %ebx
     call kernelMain
-- 
2.43.0

