From e27e444f8525e560c4c74d6fe35f067b138eda32 Mon Sep 17 00:00:00 2001
From: Heisenberg <alimirmohammad.1386@gmail.com>
Date: Mon, 1 Apr 2024 14:44:34 -0400
Subject: [PATCH 045/493] Kernel GUI

---
 kernel/include/gui/widgets/label.hpp          | 25 +++++++++
 kernel/src/gui/widgets/button.cc              | 51 +++++++++++++++++++
 .../gui/widgets/{controll.cc => control.cc}   |  0
 kernel/src/gui/widgets/label.cc               | 18 +++++++
 4 files changed, 94 insertions(+)
 create mode 100644 kernel/include/gui/widgets/label.hpp
 create mode 100644 kernel/src/gui/widgets/button.cc
 rename kernel/src/gui/widgets/{controll.cc => control.cc} (100%)
 create mode 100644 kernel/src/gui/widgets/label.cc

diff --git a/kernel/include/gui/widgets/label.hpp b/kernel/include/gui/widgets/label.hpp
new file mode 100644
index 0000000..bcc83a7
--- /dev/null
+++ b/kernel/include/gui/widgets/label.hpp
@@ -0,0 +1,25 @@
+#ifndef __LIBCACTUSOS__GUI__LABEL_H
+#define __LIBCACTUSOS__GUI__LABEL_H
+
+#include <gui/widgets/control.hpp>
+
+namespace LIBHeisenKernel
+{
+    class Label : public Control
+    {
+    public:
+        GUIProperty<char*> text = GUIProperty<char*>(this, 0);
+
+        /**
+         * Create a new label with a peice of text
+        */
+        Label(char* text = 0);
+
+        /**
+         * Draw this label
+        */
+        void DrawTo(Canvas* context, int x_abs, int y_abs) override;
+    };
+}
+
+#endif
\ No newline at end of file
diff --git a/kernel/src/gui/widgets/button.cc b/kernel/src/gui/widgets/button.cc
new file mode 100644
index 0000000..88adb9f
--- /dev/null
+++ b/kernel/src/gui/widgets/button.cc
@@ -0,0 +1,51 @@
+#include <gui/widgets/button.hpp>
+#include <log.hpp>
+
+using namespace LIBHeisenKernel;
+
+Button::Button(char* text)
+: Control(80, 40)
+{
+    this->label = text;
+    this->backColor = 0xFF190A39;
+    this->borderColor = 0xFF479BFF;
+    this->textAlignment = { Alignment::Horizontal::Center, Alignment::Vertical::Center };
+    this->textColor = 0xFF479BFF;
+    this->cornerRadius = 10;
+    this->cornerStyle = CornerStyle::Rounded;
+}
+void Button::DrawTo(Canvas* context, int x_abs, int y_abs)
+{
+    Rectangle visual = Control::GetParentsBounds(x_abs, y_abs);
+    if(visual.Area() == 0)
+        return; // No need to draw something if it isn't going to be visible anyway
+    
+    if(this->cornerStyle == CornerStyle::Rounded) {
+        context->DrawFillRoundedRect(this->backColor, visual.x, visual.y, visual.width, visual.height, this->cornerRadius);
+        context->DrawRoundedRect(this->borderColor, visual.x, visual.y, visual.width, visual.height, this->cornerRadius);
+    }
+    else if(this->cornerStyle == CornerStyle::Sharp) {
+        context->DrawFillRect(this->backColor, visual.x, visual.y, visual.width, visual.height);
+        context->DrawRect(this->borderColor, visual.x, visual.y, visual.width, visual.height);
+    }
+
+    if(this->label != 0)
+        Context::DrawStringAligned(context, this->font, this->label, this->textColor, *this, this->textAlignment, x_abs, y_abs - 2);
+
+    for(Control* c : this->childs)
+        c->DrawTo(context, x_abs + c->x, y_abs + c->y);
+}
+void Button::OnMouseDown(int x_abs, int y_abs, uint8_t button)
+{
+    this->backColor = 0xFF606060;
+    Control::OnMouseDown(x_abs, y_abs, button);
+}
+void Button::OnMouseUp(int x_abs, int y_abs, uint8_t button)
+{
+    this->backColor = 0xFF190A39;
+    Control::OnMouseUp(x_abs, y_abs, button);
+}
+void Button::OnMouseEnter(int prevX_abs, int prevY_abs, int newX_abs, int newY_abs)
+{ }
+void Button::OnMouseLeave(int prevX_abs, int prevY_abs, int newX_abs, int newY_abs)
+{ }
\ No newline at end of file
diff --git a/kernel/src/gui/widgets/controll.cc b/kernel/src/gui/widgets/control.cc
similarity index 100%
rename from kernel/src/gui/widgets/controll.cc
rename to kernel/src/gui/widgets/control.cc
diff --git a/kernel/src/gui/widgets/label.cc b/kernel/src/gui/widgets/label.cc
new file mode 100644
index 0000000..f6600a1
--- /dev/null
+++ b/kernel/src/gui/widgets/label.cc
@@ -0,0 +1,18 @@
+#include <gui/widgets/label.hpp>
+
+using namespace LIBHeisenKernel;
+
+Label::Label(char* text)
+: Control(80, 20)
+{
+    this->text = text;
+}
+
+void Label::DrawTo(Canvas* context, int x_abs, int y_abs)
+{
+    if(this->text)
+        context->DrawString(this->font, this->text, x_abs + 2, y_abs + 2, this->textColor);
+
+    for(Control* c : this->childs)
+        c->DrawTo(context, x_abs + c->x, y_abs + c->y);
+}
\ No newline at end of file
-- 
2.43.0

