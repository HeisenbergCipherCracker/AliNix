From 797d19e828686ebf7edf1623dfd6e06fc4860b46 Mon Sep 17 00:00:00 2001
From: Heisenberg <alimirmohammad.1386@gmail.com>
Date: Sun, 31 Mar 2024 20:09:52 -0400
Subject: [PATCH 21/50] Minor update

---
 kernel/arch/x86-pc/startup.c | 50 +++++-------------------------------
 1 file changed, 6 insertions(+), 44 deletions(-)

diff --git a/kernel/arch/x86-pc/startup.c b/kernel/arch/x86-pc/startup.c
index ffcbf49..7b10ea5 100644
--- a/kernel/arch/x86-pc/startup.c
+++ b/kernel/arch/x86-pc/startup.c
@@ -22,55 +22,12 @@
 #include <colorforth/colorforth.h>
 
 
-
-#define VGA_TEXT_BUFFER_ADDR 0xB8000
-#define VGA_WIDTH 80
-#define VGA_HEIGHT 25
-#define VGA_ATTRIBUTE_BYTE 0x0F // White text on black background
-
-void print_string(const char *str) {
-    uint16_t *vga_buffer = (uint16_t*)VGA_TEXT_BUFFER_ADDR;
-    int offset = 0;
-    
-    // Loop through the string and print each character
-    while (*str != '\0') {
-        if (*str == '\n') {
-            // Move to the beginning of the next line
-            offset += VGA_WIDTH - offset % VGA_WIDTH;
-        } else {
-            // Write the character and attribute byte to the VGA buffer
-            vga_buffer[offset] = (uint16_t)(*str) | (uint16_t)(VGA_ATTRIBUTE_BYTE << 8);
-            ++offset;
-        }
-
-        // Move to the next character in the string
-        ++str;
-
-        // Check if we reached the end of the screen, if so, scroll
-        if (offset >= VGA_WIDTH * VGA_HEIGHT) {
-            // Copy each row to the row above it
-            for (int i = 0; i < VGA_HEIGHT - 1; ++i) {
-                for (int j = 0; j < VGA_WIDTH; ++j) {
-                    vga_buffer[i * VGA_WIDTH + j] = vga_buffer[(i + 1) * VGA_WIDTH + j];
-                }
-            }
-
-            // Clear the last row
-            for (int i = 0; i < VGA_WIDTH; ++i) {
-                vga_buffer[(VGA_HEIGHT - 1) * VGA_WIDTH + i] = (uint16_t)(' ') | (uint16_t)(VGA_ATTRIBUTE_BYTE << 8);
-            }
-
-            // Reset the offset to the beginning of the last row
-            offset = (VGA_HEIGHT - 1) * VGA_WIDTH;
-        }
-    }
-}
-
 /**
  * The kernel entry point. All starts from here!
  */
 void roentgenium_main(uint32_t magic, uint32_t address)
 {
+    char buff[] = "Hello Kernel!!!";
     uint16_t retval;
     multiboot_info_t *mbi;
     mbi = (multiboot_info_t *)address;
@@ -126,6 +83,11 @@ void roentgenium_main(uint32_t magic, uint32_t address)
     // Console
     console_setup(&cons, vga_display_character);
 
+    uint16_t buffer_len = sizeof(buff) - 1; // -1 to exclude the null terminator
+
+    // Call console_write to write the buff to the console
+    console_write(&cons, buff, buffer_len);
+
 
     // colorForth
     colorforth_initialize();
-- 
2.43.0

